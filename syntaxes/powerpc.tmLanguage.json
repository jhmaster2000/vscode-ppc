{
	"scopeName": "source.powerpc",
	"name": "PowerPC Assembly",
	"fileTypes": [
		"s",
		"S",
		"asm",
		"ppc"
	],
	"patterns": [
		{
			"include": "#comments"
		},
		{
			"include": "#strings"
		},
		{
			"include": "#constants"
		},
		{
			"include": "#entities"
		},
		{
			"include": "#mnemonic"
		}
	],
	"repository": {
		"keywords": {
			"patterns": []
		},
		"comments": {
			"patterns": [
				{
					"match": "(//).*$",
					"name": "comment.line.double-slash.powerpc"
				},
				{
					"match": "#.*$",
					"name": "comment.line.hash.powerpc"
				},
				{
					"name": "comment.block.powerpc",
					"begin": "\\/\\*",
					"beginCaptures": {
						"0": {
							"name": "comment.begin.powerpc"
						}
					},
					"endCaptures": {
						"0": {
							"name": "comment.end.powerpc"
						}
					},
					"end": "\\*\\/"
				}
			]
		},
		"strings": {
			"patterns": [
				{
					"begin": "\"",
					"end": "\"",
					"name": "string.quoted.double.powerpc"
				},
				{
					"match": "\\'\\S\\'",
					"name": "string.quoted.single.powerpc"
				}
			]
		},
		"constants": {
			"patterns": [
				{
					"match": "\\b[0-9_]+\\b",
					"name": "constant.numeric.dec.powerpc"
				},
				{
					"match": "\\b0[xX][0-9a-fA-F_]+\\b",
					"name": "constant.numeric.hex.powerpc"
				},
				{
					"match": "\\b0[bB][0-1_]+\\b",
					"name": "constant.numeric.bin.powerpc"
				},
				{
					"match": "\\b0[0-7_]+\\b",
					"name": "constant.numeric.oct.powerpc"
				}
			]
		},
		"entities": {
			"patterns": [
				{
					"match": "\\.(text|data|bss|rodata|sdata2|sdata|note|org|section|previous|dsect|comm|lcomm|lsbss|sbss)( |$|;|,|#|/)",
					"name": "entity.name.section.powerpc"
				},
				{
					"match": "\\.(align|balign|fill|incbin|set|extern|space|vle|novle|need|ident|file|fsize|size|scall|type|eject|gen|nogen|list|nolist|title|subtitle|sbttl|rept|endr|macrodef|macro|endm|exitm|if|elseif|else|endif|end|equ|inspect|nowarning)( |$|;|,|#|/)",
					"name": "entity.name.cmd.powerpc"
				},
				{
					"match": "\\.(ascii|asciz|byte|double|float|int|quad|short|single|string|word|long|strz|skip|offset|weak)( |$|;|,|#|/)",
					"name": "entity.name.cmd.datatype.powerpc"
				},
				{
					"name": "entity.name.cmd.powerpc",
					"match": "(\\.(section)) (\\.(text|data|bss|rodata|sdata2|sdata)( |$|;|,|#|/))",
					"captures": {
						"1": {
							"name": "entity.name.cmd.powerpc.cmd"
						},
						"3": {
							"name": "entity.name.section.powerpc"
						}
					}
				},
				{
					"name": "entity.name.cmd.powerpc",
					"match": "(\\.(globl|global)) ([\\w \\,]+)( |$|;|,|#|/)",
					"captures": {
						"1": {
							"name": "variable.parameter.cpp"
						},
						"3": {
							"name": "entity.name.function.powerpc"
						}
					}
				},
				{
					"match": "\\w+:( |$|;|,|#|/)",
					"name": "entity.name.function.powerpc"
				},
				{
					"match": "\\.(include|error|warning)( |$|;|,|#|/)",
					"name": "variable.parameter.cpp"
				}
			]
		},
		"mnemonic": {
			"patterns": [
				{
					"include": "#mnemonic-add"
				},
				{
					"include": "#mnemonic-and"
				},
				{
					"include": "#mnemonic-branch"
				},
				{
					"include": "#mnemonic-compare"
				},
				{
					"include": "#mnemonic-data-cache"
				},
				{
					"include": "#mnemonic-divide"
				},
				{
					"include": "#mnemonic-float"
				},
				{
					"include": "#mnemonic-load"
				},
				{
					"include": "#mnemonic-move"
				},
				{
					"include": "#mnemonic-multiple"
				},
				{
					"include": "#mnemonic-or"
				},
				{
					"include": "#mnemonic-condition-register"
				},
				{
					"include": "#mnemonic-store"
				},
				{
					"include": "#mnemonic-subtract"
				},
				{
					"include": "#mnemonic-tlb"
				},
				{
					"include": "#mnemonic-rotate"
				},
				{
					"include": "#mnemonic-shift"
				},
				{
					"include": "#mnemonic-bitwise"
				},
				{
					"include": "#mnemonic-xor"
				},
				{
					"include": "#mnemonic-tw"
				},
				{
					"include": "#mnemonic-misc"
				}
			]
		},
		"mnemonic-add": {
			"patterns": [
				{
					"match": "\\badd(o|c|co|e|eo|i|ic|is|me|meo|ze|zeo)?\\b",
					"name": "keyword.mnemonic.add"
				}
			]
		},
		"mnemonic-and": {
			"patterns": [
				{
					"match": "\\b((and|andc|andi|andis)[\\.]?)\\s+(\\B|\\b)",
					"name": "keyword.mnemonic.and",
					"captures": {
						"1": {
							"name": "keyword.mnemonic.and"
						}
					}
				},
				{
					"match": "\\bcrand(c)?\\b",
					"name": "keyword.mnemonic.and.condition"
				}
			]
		},
		"mnemonic-branch": {
			"patterns": [
				{
					"match": "\\bblr\\b",
					"name": "keyword.mnemonic.branch"
				},
				{
					"match": "\\b(b(a|l|la)?)\\s+(\\w+)",
					"name": "keyword.mnemonic.branch",
					"captures": {
						"1": {
							"name": "keyword.mnemonic.branch"
						},
						"3": {
							"name": "entity.name.function.powerpc"
						}
					}
				},
				{
					"match": "\\b(b(a|l|la)?)\\s+([+-]\\w+)",
					"name": "keyword.mnemonic.branch",
					"captures": {
						"1": {
							"name": "keyword.mnemonic.branch"
						},
						"3": {
							"name": "entity.name.function.powerpc"
						}
					}
				},
				{
					"match": "\\b(bc(a|l|la)?)\\s+(\\w+)?",
					"name": "keyword.mnemonic.branch.conditional",
					"captures": {
						"1": {
							"name": "keyword.mnemonic.branch.conditional"
						},
						"3": {
							"name": "entity.name.function.powerpc"
						}
					}
				},
				{
					"match": "\\bbcctr(l)?\\b",
					"name": "keyword.mnemonic.branch.conditional.count"
				},
				{
					"match": "\\b((bnelr|beqlr|bltlr|blelr|bgtlr|bgelr|bctrl|bctr|blrl)[-+]?)",
					"name": "aaaakeyword.mnemonic.branch.conditional.misc",
					"captures": {
						"1": {
							"name": "keyword.mnemonic.branch.misc"
						}
					}
				},
				{
					"match": "\\b((bdnz|bne|beq|ble|blt|bge|bgt)[-+]?)\\s+(\\w+)?",
					"name": "aaaakeyword.mnemonic.branch.conditional.misc",
					"captures": {
						"1": {
							"name": "keyword.mnemonic.branch.misc"
						},
						"3": {
							"name": "entity.name.function.powerpc"
						}
					}
				},
				{
					"match": "\\b(bclr|bclrl)\\b",
					"name": "keyword.mnemonic.branch"
				}
			]
		},
		"mnemonic-compare": {
			"patterns": [
				{
					"match": "\\bcmp(i|l|li|w|wi|lwi|lw)?\\b",
					"name": "keyword.mnemonic.compare"
				}
			]
		},
		"mnemonic-data-cache": {
			"patterns": [
				{
					"match": "\\bdc(bf|bi|bst|bt|btst|bz)?\\b",
					"name": "keyword.mnemonic.data-cache"
				}
			]
		},
		"mnemonic-divide": {
			"patterns": [
				{
					"match": "\\bdiv(w|wo|wu|wuo)?\\b",
					"name": "keyword.mnemonic.divide"
				}
			]
		},
		"mnemonic-float": {
			"patterns": [
				{
					"match": "\\b(stfs|lfs|fabs|fctiw|stfiwx|fmuls|fdivs|fmr|lfd|fadds|stfd)\\b",
					"name": "keyword.mnemonic.float"
				}
			]
		},
		"mnemonic-load": {
			"patterns": [
				{
					"match": "\\blbz(u|ux|x)?\\b",
					"name": "keyword.mnemonic.load.byte.zero"
				},
				{
					"match": "\\blha(u|ux|x)?\\b",
					"name": "keyword.mnemonic.load.half.algebraic"
				},
				{
					"match": "\\blhz(u|ux|x)?\\b",
					"name": "keyword.mnemonic.load.half.zero"
				},
				{
					"match": "\\blhbrx\\b",
					"name": "keyword.mnemonic.load.half.reverse"
				},
				{
					"match": "\\blw(arx|brx|z|zu|zux|zx)\\b",
					"name": "keyword.mnemonic.load.word"
				},
				{
					"match": "\\blsw(i|x)\\b",
					"name": "keyword.mnemonic.load.string"
				},
				{
					"match": "\\b(lmw|li|lis)\\b",
					"name": "keyword.mnemonic.load.misc"
				}
			]
		},
		"mnemonic-move": {
			"patterns": [
				{
					"match": "\\bmc(rf|rxr)\\b",
					"name": "keyword.mnemonic.move.condition"
				},
				{
					"match": "\\bmf(cr|msr|spr|tb|ctr|lr|xer|sprg|srr0|srr1)\\b",
					"name": "keyword.mnemonic.move.from"
				},
				{
					"match": "\\bmt(cr|crf|msr|spr|ctr|lr|xer|sprg|srr0|srr1)\\b",
					"name": "keyword.mnemonic.move.to"
				},
				{
					"match": "\\bmr(.)?(\\B|\\b)",
					"name": "keyword.mnemonic.move"
				}
			]
		},
		"mnemonic-multiple": {
			"patterns": [
				{
					"match": "\\bmul(hw|hwu|li|lw)\\b",
					"name": "keyword.mnemonic.multiple"
				}
			]
		},
		"mnemonic-or": {
			"patterns": [
				{
					"match": "\\bor(c|i|is)?\\b",
					"name": "keyword.mnemonic.or"
				},
				{
					"match": "\\bnop\\b",
					"name": "keyword.mnemonic.or.nop"
				}
			]
		},
		"mnemonic-condition-register": {
			"patterns": [
				{
					"match": "\\bcr(eqv|nand|nor|or|orc|xor)\\b",
					"name": "keyword.mnemonic.condition-register"
				}
			]
		},
		"mnemonic-store": {
			"patterns": [
				{
					"match": "\\bstb(u|ux|x)?\\b",
					"name": "keyword.mnemonic.store.byte"
				},
				{
					"match": "\\bsth(brx|u|ux|x)?\\b",
					"name": "keyword.mnemonic.store.half"
				},
				{
					"match": "\\bstw(brx|cx|u|ux|x)?\\b",
					"name": "keyword.mnemonic.store.word"
				},
				{
					"match": "\\bstsw(i|x)\\b",
					"name": "keyword.mnemonic.store.string"
				},
				{
					"match": "\\bstmw\\b",
					"name": "keyword.mnemonic.store.misc"
				}
			]
		},
		"mnemonic-subtract": {
			"patterns": [
				{
					"match": "\\bsubf(o|c|co|e|eo|ic|me|meo|ze|zeo)?\\b",
					"name": "keyword.mnemonic.subtract"
				},
				{
					"match": "\\b((sub|subo|subc|subco|subi|subis|subic)?[\\.]?)\\s+\\b",
					"name": "keyword.mnemonic.subtract",
					"captures": {
						"1": {
							"name": "keyword.mnemonic.subtract"
						}
					}
				}
			]
		},
		"mnemonic-tlb": {
			"patterns": [
				{
					"match": "\\btlb(ia|ie|sync)\\b",
					"name": "keyword.mnemonic.tlb"
				}
			]
		},
		"mnemonic-rotate": {
			"patterns": [
				{
					"match": "\\brlw(imi|inm|nm)\\b",
					"name": "keyword.mnemonic.rotate.left"
				},
				{
					"match": "\\b((extrwi|clrlwi)[\\.]?)\\s+\\b",
					"captures": {
						"1": {
							"name": "keyword.mnemonic.rotate.special"
						}
					}
				}
			]
		},
		"mnemonic-shift": {
			"patterns": [
				{
					"match": "\\b(slw|slwi)\\b",
					"name": "keyword.mnemonic.shift.left"
				},
				{
					"match": "\\b(sraw|srawi|srw|srwi)\\b",
					"name": "keyword.mnemonic.shift.right"
				}
			]
		},
		"mnemonic-tw": {
			"patterns": [
				{
					"match": "\\btw(i)?\\b",
					"name": "keyword.mnemonic.tw"
				}
			]
		},
		"mnemonic-xor": {
			"patterns": [
				{
					"match": "\\bxor(i|is)?\\b",
					"name": "keyword.mnemonic.xor"
				}
			]
		},
		"mnemonic-bitwise": {
			"patterns": [
				{
					"match": "\\b(nand|nor|neg)\\b",
					"name": "keyword.mnemonic.bitwise.misc"
				}
			]
		},
		"mnemonic-misc": {
			"patterns": [
				{
					"match": "\\b(cntlzw|eciwx|ecowx|eieio|eqv|extsb|extsh|icbi|isync|sync|rfi|sc|tlbli|tlbli|tlbld|tdi|td|svc|stq|stfsx|stfsux|stfsu|stfqx|stfqux|stfqu|stfq|stfdx|stfdux|stfdu|stdx|stdux|stdu|stdcx|std|srq|srlq|srliq|sriq|sreq|srea|sre|srd|sraq|sraiq|sradi|srad|slq|sllq|slliq|sliq|sleq|sle|sld|si|scv|rrib|rlmi|rldimi|rldicr|rldicl|rldic|rldcr|rldicl|rldcl|rfsvc|rfid|rac|popcntbd|nabs|mulld|mulhdu|mulhd|mul|mtocrf|mtfsfi|mtfsf|mtfsb1|mtfsb0|mfsri|mfsr|mfocrf|mffs|mcrfs|maskir|maskg|lwax|lwaux|lwa|lscbx|lq|lfsux|lfsu|lfqx|lfqux|lfqu|lfq|lfdx|lfdux|lfdu|ldx|ldux|ldu|ldarx|ld|fsub|fsqrts|fsqrt|fsel|frsqrte|fres|fnmsub|fnmadd|fneg|fnabs|fmul|fmsub|fmadd|fdiv|fctiwz|fctidz|fctid|fcmpo|fcfid|fadd|extsw|dozi|doz|divs|divdu|divd|dclst|cntlzd|cli|clf|clcs|abs)\\b",
					"name": "keyword.mnemonic.misc"
				},
				{
					"match": "\\b(insrwi|extrwi|fcmpu|clrlwi|bctrl|beqctr|lfsx|crclr|frsub|frsp|bng|bnl|bso|bns|bun|bnu|bdnzt|bdnzf|bdz|vxor|vupklsh|vupklsb|vupklpx|vupkhsh|vupkhsb|vupkhpx|vsum4ubs|vsum4shs|vsum4sbs|vsum2sws|vsumsws|vsubuws|vsubuwm|vsubuhs|vsubuhm|vsububs|vsububm|vsubsws|vsubshs|vsubsbs|vsubfp|vsubcuw|vsrw|vsro|vsrh|vsrb|vsraw|vsrah|vsrab|vsr|vspltw|vspltisw|vspltish|vspltisb|vsplth|vspltb|vslw|vslo|vslh|vsldoi|vslb|vsl|vsel|vrsqrtefp|vrlw|vrlh|vrlb|vrfiz|vrfip|vrfin|vrfim|vrefp|vpkuwus|vpkuwum|vpkuhus|vpkuhum|vpkswus|vpkswss|vpkshus|vpkshss|vpkpx|vperm|vor|vnor|vnmsubfp|vmulouh|vmuloub|vmulosh|vmulosb|vmuleuh|vmuleub|vmulesh|vmulesb|vmsumuhs|vmsumuhm|vmsumubm|vmsumshs|vmsumshm|vmsummbm|vmrglw|vmrglh|vmrglb|vmrghw|vmrghh|vmrghb|vmladduhm|vminuw|vminuh|vminub|vminsw|vminsh|vminsb|vminfp|vmhraddshs|vmhaddshs|vmaxuw|vmaxuh|vmaxub|vmaxsw|vmaxsh|vmaxsb|vmaxfp|vmaddfp|vlogefp|vexptefp|vctuxs|vctsxs|vcmpgtuwx|vcmpgtuhx|vcmpgtubx|vcmpgtswx|vcmpgtshx|vcmpgtsbx|vcmpgtfpx|vcmpgefpx|vcmpequwx|vcmpequhx|vcmpequbx|vcmpeqfpx|vcmpbfpx|vcfux|vcfsx|vavguw|vavguh|vavgub|vavgsw|vavgsh|vavgsb|vandc|vand|vadduws|vadduwm|vadduhs|vadduhm|vaddubs|vaddubm|vaddsws|vaddshs|vaddsbs|vaddfp|vaddcuw|stvxl|stvx|stvewx|stvehx|stvebx|mtvscr|mfvscr|lvxl|lvx|lvsr|lvsl|lvewx|lvehx|lvebx|dstt|dststt|dstst|dst|dssall|dss|ps_merge10|mtibatu|mtibatl|mfibatu|mfibatl|mftbu|mttbu|mttb|mtdbatu|mtdbatl|mfdbatu|mfdbatl|mtear|mfsrin|mfpvr|mfear|fsubs|fnmsubs|fnmadds|fmsubs|fmadds|mfbatl|mfbatu|mtbatl|mtbatu)\\b",
					"name": "keyword.mnemonic.misc"
				}
			]
		}
	}
}